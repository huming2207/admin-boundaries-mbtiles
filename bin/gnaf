#!/bin/sh
# Some magic here
export OGR_SQLITE_CACHE=768
echo "Generating GNAF sqlite3 database ($1)"
cat sql/gnaf/create_tables.sql | sqlite3 gnaf.$1.sqlite
echo "Table generation complete ($1)"
cat sql/gnaf/import_data.sql | sed "s/%%STATE%%/$1/g" | sqlite3 gnaf.$1.sqlite
echo "Data import complete ($1)"
ogr2ogr -f geojsonseq -dialect sqlite -sql "select ST_GeomFromText('POINT( '||longitude||' '||latitude||' )', 4326) as geom, * from ADDRESS_COMBINED_VIEW;" -t_srs crs:84 -s_srs crs:84 gnaf.$1.geojson gnaf.$1.sqlite &
# ogr2ogr -f GPKG -dialect sqlite -sql "select ST_GeomFromText('POINT( '||longitude||' '||latitude||' )', 4326) as geom, * from ADDRESS_COMBINED_VIEW;" -t_srs crs:84 -s_srs crs:84 gnaf.$1.gpkg gnaf.$1.sqlite &

# Take house number out from SQLite
sqlite3 -header -csv gnaf.$1.sqlite "select NUMBER_FIRST as housenumber, latitude, longitude from ADDRESS_COMBINED_VIEW;" > housenumber.$1.csv

 # Take the CSV output, convert GDA94 to WGS84 and generate GeoJSON points
ogr2ogr -s_srs 'EPSG:4283' -t_srs 'EPSG:4326' -f geojsonseq housenumber.$1.geojson housenumber.$1.csv -oo X_POSSIBLE_NAMES=LONGITUDE -oo Y_POSSIBLE_NAMES=LATITUDE
wait
echo "ogr2ogr conv to geojson and GPKG complete ($1)"
ls -lh
gzip gnaf.$1.sqlite &
gzip gnaf.$1.geojson &
# gzip gnaf.$1.gpkg &
gzip housenumber.$1.csv &
gzip housenumber.$1.geojson &
wait
echo "gzipped ($1)"
