stages:
  - prep
  - gnaf:mbtile
  - merge
  # - release

gnaf:prep:
  stage: prep
  image: osgeo/gdal:alpine-small-latest
  artifacts:
    paths:
      - "*.geojson.gz"

  variables:
    GIT_CHECKOUT: "true"
  script:
    - echo "Downloading GNAF data from $GNAF_SRC_URL"
    - echo "Later it will be released as $GNAF_RELEASE_TAG"
    - apk add curl unzip sqlite
    - mkdir tmp
    - curl -L $GNAF_SRC_URL > data.zip
    - unzip data.zip
    - mv G-NAF/G-NAF*/Standard tmp/standard
    - mv G-NAF/G-NAF*/Authority* tmp/authority
    - echo "Converting SQLite DB files"
    - ls -lh
    - ./bin/gnafall
    - ls -lh
    - rm -rf G-NAF data.zip tmp
    - ls -lh
    
gnaf:mbtile:
  stage: gnaf:mbtile
  image: klokantech/tippecanoe
  variables:
    GIT_CHECKOUT: "true"
  artifacts:
    paths:
      - "*.mbtiles.gz"
      
  dependencies: 
    - gnaf:prep
  script:
    - echo "Now packing MBTiles"
    - ls -lah
    - ./bin/generate_mbtiles_gnaf ACT
    - ./bin/generate_mbtiles_gnaf NT
    - ./bin/generate_mbtiles_gnaf TAS
    - ./bin/generate_mbtiles_gnaf OT
    - ./bin/generate_mbtiles_gnaf NSW
    - ./bin/generate_mbtiles_gnaf QLD
    - ./bin/generate_mbtiles_gnaf VIC
    - ./bin/generate_mbtiles_gnaf SA
    - ./bin/generate_mbtiles_gnaf WA

osm:prep:
  stage: prep
  image: ubuntu:20.04
  artifacts:
    paths:
      - "*.mbtiles.gz"
  script:
    - DEBIAN_FRONTEND=noninteractive apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get install -y rapidjson-dev zip unzip git build-essential liblua5.1-0 liblua5.1-0-dev libprotobuf-dev libsqlite3-dev protobuf-compiler shapelib libshp-dev libboost-all-dev aria2
    - aria2c -x16 -s100 --continue=true --auto-file-renaming=false https://download.geofabrik.de/australia-oceania/australia-latest.osm.pbf
    - aria2c -x16 -s100 --continue=true --auto-file-renaming=false https://osmdata.openstreetmap.de/download/water-polygons-split-4326.zip
    - unzip water-polygons-split-4326.zip
    - mv water-polygons-split-4326 coastline
    - git clone https://github.com/systemed/tilemaker
    - cd tilemaker && make -j32 && make install && cd ..
    - tilemaker --input australia-latest.osm.pbf --output osm.mbtiles --config tilemaker-config.json --process process-openmaptiles.lua



# release_tiles:
#   stage: release
#   image: registry.gitlab.com/gitlab-org/release-cli:latest
#   rules:
#     - if: $CI_COMMIT_TAG
#   script:
#     - echo "Running release now!"
#   release:
#     name: 'Release $CI_COMMIT_TAG'
#     tag_name: '$CI_COMMIT_TAG'
#     ref: '$CI_COMMIT_TAG'
#     description: 'Created using the release-cli $EXTRA_DESCRIPTION'
